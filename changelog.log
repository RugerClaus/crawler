Alpha 0.1.0 ---- LOG

Yet another attempt at making a game. This time I have removed everything but the player. I now have a top down world using the same character from that youtube tutorial that I
seem to not be able to find. Oh well. I liked the assets. I have ditched them all. Now for the first version of this game.

So far you can collect coins. The player now has multidirectional animations. The coins all have an assigned value with gold ones being the highest. I have started integrating 
walls as well. That's huge. The boundaries work pretty well at the moment. I think this will be a maze/puzzle dungeon crawler. I want to have keys to get to further levels. 
There should be some sort of portal and I already have a door graphic to test with lol. It's trash.

You can also move diagonally which is neat. 

This now has lots of pieces from previous setups (see the other two public repos on this profile), but I have now done a different style of level generation. Using a fixed grid.

I will try to expand on this because I have given up on chunking for now. Maybe that will be something I learn later. For now fixed levels are handled in /assets/levels/level1.json
I'll need to make this interchangeable with different levels. So I will probably add that in the next version. I know this is a huge amount of code for a first commit, but
everything works, and is pretty extendable.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Alpha 0.1.1 ---- LOG

Making much better progress with this game so far than I'd hoped. I've really gotten the level design started. There is now an undefined texture for every terrain feature not 
set in the level file. The coins now make specific noises when picked up. I'm eventually going to have to overhaul this for all items not just coins. Perhaps there will be
higher value coins/currency that can be picked up later on. Haven't considered that fully. You can design the level in the level JSON file and then make sure you have textures
added to the appropriate directories before running load_terrain_tiles on the World object. Besides that, everything can be loaded from there. This game is looking a bit spaghetti
code-y, but I don't really care. If I have to come back to it, I suppose I will. Now that state management is handled, my life is a lot easier.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Alpha 0.1.2 ---- LOG

Game now has foreground position tiles, which are currently just black squares, but they can be set to building tiles or whatever. All the logic is there. Implemented a debugger.
It can be accessed by pressing F9, and shows the version, the player's coordinates in tiles, and the current FPS of the game. You can now close the pause menu with the escape key.
All hail callbacks. Callback functions are really your best friend. Cross-object functionality. The true messaging function of objects. Don't let the abstraction that is an object
get in the way of your program. 

Anyway, the biggest functionality change here is my simulated third dimension. I'm kind of feeling a hammerwatch sort of vibe for this one. Eventually there will be actual terrain
but for now enjoy my placeholder undefined block. Feel lucky, it was initially a circle with a cross on a white background. Trust me the magenta looks loads better. 

After writing all that, I went ahead and overhauled the world generation at least partially. level_structure.py will take care of loading structures and their details onto
the grid. However, the level itself may need to be an object. That or I have other files or call alternate functions depending on the level. I could add a conditional into 
World.generate_base_terrain() to check for level and render what's needed there procedurally. That' what I think I'll do. Regardless, the player now starts in a structure of sorts
so that is cool. 

The real work in all of this update was reworking the player sprites to include a sword. That took me so long to do. I'm not using spritesheets, I'm loading individual images.
Apparently I haven't learnt my lesson yet, nor do I know how to use a spritesheet. I'm certain I'll need to learn that eventually. Extremely certain. In fact it may be a huge
technical hurdle in this game, but I haven't seen a problem yet.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Alpha 0.1.3 ---- LOG

Now the level structure is completely handled. In fact, the coin rendering is way better as with any entity now. All the entities are stored in the world object rather than the
Window object for separation of concerns and that precaution has benefitted me. There is now a way to place coins and damaging tiles down. The only damaging tile currently is
"spike". This works as intended. 

I cleaned up a lot of the World class code. I put most of the world loading on the level_structure file now, so there's no messy JSON. That was a poor idea. Tedious as fuck.

You'll also notice a huge change on the left side of the screen. There is now a health bar, and a game over function. The player can take damage and teh game over screen can be 
activated. It needs some adjustment, but for testing purposes, the Game over screen is fine. I'm really proud of how far this has come. There are now obstacle tiles, the player 
take damage, and collect currency. Now all it needs is an enemy and a store, and it will be a full fledged game. Maybe some combat mechanics too obviously. 

Anyway, enjoy 0.1.3

----------------------------------------------------------------------------------------------------------------------------------------------------------------

Alpha 0.1.4 ---- LOG

A very fast update, less than 2 hours since the previous. I have spent the time integrating a very basic save system that will save any given data in a JSON file located in
root/saves/save.json

I spent a whole lot of time wondering why the player was just spawning in the default location so I passed the x,y coords in the constructor. I kinda hate using the actual
screen coords to spawn the player, but every other metric including collision logic reads the player on a tile by tile basis, so having it just in that one spot isn't so bad.

I figured I'd better stop here and updated before I start working on any other features. This thing I'm making is coming along even if it isn't a game yet.

Now has README

Anyway, enjoy 0.1.4

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Alpha 0.1.5 ---- LOG

- Made minor adjustments to save logic
- Added new font GameOver font
- Gave a load functionality to game over so you can load from a recent save. I will probably drop the save button in favor of checkpoints.
- Revamped the main menu and changed the aspect ratio to a more modern widescreen in preparation for screen size changing mechanics
- Heavily modified the Player UI, and it now has a border
- Player UI shows number of health potions player is carrying out of max
- Saving handles number of potions on player for loading games.

Overall solid update. The next update will have workable potions and more. 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

Alpha 0.1.51 ---- LOG

Overall it's a short update

-fixed coins not being properly kept out of world if they are in the player save file by ID. That now works and if you load a saved game, the collected items, as
long as they're kept by id in a dictionary in the World object, and stored by ID on the player object, then I can dynamically load or unload them depending on the contents of
the save file. I'm going to keep working on saving things as it appears, that's going to need to be updated quite often every time I add something new that needs to be saved

I'm updating now since this was such a frustrating pipeline to work out.

Anyway, enjoy 0.1.51

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Alpha 0.1.6 ---- LOG

- Added saving game icon when saving game from pause menu
I know, why should I work on a feature I'm going to depracate later? I still haven't decided if that's the case yet.

- Added health potions and their functionality to the game. 
* The icon for health potions is always displayed. It may be added after a tutorial point if I add a tutorial
to the game.

- Added discarded items to the player
* This way when the player uses an item such as a health potion that it not only removes from the health potion/item count, 
but also makes sure it doesn't respawn when loading a save file and allowing the player to duplicate items.

** Coins are not included in the discarded items list ever. The reason for this is so that the money can be used without losing
the fact that the coins should not respawn into the world. Maybe that will be a cheat code later. When making a game like this,
I get to decide whatever I want.

- Streamlined the way that items are collected by the player

- Streamlined the way entities like "spikes" and "items" will be saved in the save file.

- Completely revamped player inventory system again storing it in a dictionary.

* I'm starting to see a pattern here. If I need storage of info at all, a dictionary is the way to go.
There are a lot of steps to this and it goes all the way down to the world save functionality, but I got it added and it's extensible.
I may have to re-engineer it again.

- Added an item_type attribute to items.

I may add more debugging functionality like no-clip at some point as well. 

I better commit this because I've started designing a better system for storing items already. I may also streamline the entity tree.
I'll need to also add animations for taking the health potion

Anyway, enjoy 0.1.6

------------------------------------------------------------------------------------------------------------------------------------------------------------